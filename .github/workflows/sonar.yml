# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Sonar

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Analyze with SonarCloud
        run: |
          mvn -Dspotless.apply.skip -Pcoverage -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          # Needed to get some information about the pull request, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload annotations
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const pr = github.event.pull_request.number;
            const url = `https://sonarcloud.io/api/issues/search?pullRequest=${pr}&s=FILE_LINE&resolved=false&sinceLeakPeriod=true&ps=100&facets=severities%2Ctypes&componentKeys=onthegomap_planetiler&organization=onthegomap&additionalFields=_all`;
            console.log("Fetching " + url);
            const result = JSON.parse(await github.request(url));
            result.issues.forEach(issue => {
              const textRange = issue.textRange;
              const rule = encodeURIComponent(issue.rule);
              try {
                const message = [
                  issue.message,
                  `${rule} see: https://sonarcloud.io/organizations/onthegomap/rules?open=${rule}&rule_key=${rule}`,
                  `https://sonarcloud.io/project/issues?pullRequest=${pr}&open=${encodeURIComponent(issue.key)}&id=onthegomap_planetiler`
                ].join('\n');
                const args = {
                  title: 'Sonar ${issue.severity.toLowerCase()} ${issue.type.toLowerCase().replace(/_/g, ' ')}`,
                  file: issue.component.replace(/^[^:]*:/, ''),
                  startLine: textRange.startLine,
                  endLine: textRange.endLine,
                  startColumn: textRange.startOffset,
                  endColumn: textRange.endOffset
                };
                core.warning(message, args);
              } catch (e) {
                core.error(`Unable to parse sonar issue: ${JSON.stringify(issue)}`);
              }
            });

# old logic
#      - run: 'echo ::add-matcher::.github/sonar-matcher.json'
#      - name: Create annotations from sonar issues
#        run: |
#          curl -s 'https://sonarcloud.io/api/issues/search?pullRequest=${{ github.event.pull_request.number }}&s=FILE_LINE&resolved=false&sinceLeakPeriod=true&ps=100&facets=severities%2Ctypes&componentKeys=onthegomap_planetiler&organization=onthegomap&additionalFields=_all' | \
#          jq -r '.issues[] | .component + "__SEPARATOR__warning__SEPARATOR__" + (.line | tostring) + "__SEPARATOR__[" + .severity + " " + .type + "] " + .message + " (" + .rule + ")"'

# example issue:
#     {
#      "key": "AYAswQPyvZr84gBKqiD-",
#      "rule": "java:S2095",
#      "severity": "BLOCKER",
#      "component": "onthegomap_planetiler:planetiler-core/src/main/java/com/onthegomap/planetiler/FeatureCollector.java",
#      "project": "onthegomap_planetiler",
#      "line": 54,
#      "hash": "67abb92be3909f708846bdc09c6f03f4",
#      "textRange": {
#        "startLine": 54,
#        "endLine": 54,
#        "startOffset": 19,
#        "endOffset": 63
#      },
#      "flows": [],
#      "status": "OPEN",
#      "message": "Use try-with-resources or close this \"BufferedWriter\" in a \"finally\" clause.",
#      "effort": "5min",
#      "debt": "5min",
#      "assignee": "msbarry@github",
#      "tags": [],
#      "transitions": [],
#      "actions": [],
#      "comments": [],
#      "creationDate": "2022-04-15T12:23:53+0200",
#      "updateDate": "2022-04-15T12:23:53+0200",
#      "type": "BUG",
#      "organization": "onthegomap",
#      "pullRequest": "177"
#    },
